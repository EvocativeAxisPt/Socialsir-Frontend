[{"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\index.js":"1","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\reportWebVitals.js":"2","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\App.js":"3","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\util\\theme.js":"4","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\paginas\\login.js":"5","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\paginas\\signup.js":"6","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\util\\AuthRoute.js":"7","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\types.js":"8","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\actions\\userActions.js":"9","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\store.js":"10","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\paginas\\home.js":"11","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\paginas\\user.js":"12","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\layout\\NavBar.js":"13","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\reducers\\uiReducer.js":"14","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\reducers\\dataReducer.js":"15","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\util\\MyButton.js":"16","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\actions\\dataActions.js":"17","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\reducers\\userReducer.js":"18","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\layout\\Notifications.js":"19","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\PostScream.js":"20","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\profile\\Profile.js":"21","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\Scream.js":"22","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\profile\\ProfileEstatico.js":"23","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\ScreamImage.js":"24","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\LikeButton.js":"25","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\ScreamDialog.js":"26","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\DeleteScream.js":"27","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\CommentForm.js":"28","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\Comments.js":"29","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\profile\\EditDetails.js":"30"},{"size":494,"mtime":1611925634656,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1611925634672,"results":"33","hashOfConfig":"32"},{"size":2611,"mtime":1612031059448,"results":"34","hashOfConfig":"32"},{"size":1803,"mtime":1611925634672,"results":"35","hashOfConfig":"32"},{"size":4943,"mtime":1611925634672,"results":"36","hashOfConfig":"32"},{"size":5817,"mtime":1611925634672,"results":"37","hashOfConfig":"32"},{"size":583,"mtime":1612031059632,"results":"38","hashOfConfig":"32"},{"size":980,"mtime":1612031059623,"results":"39","hashOfConfig":"32"},{"size":2622,"mtime":1612031059597,"results":"40","hashOfConfig":"32"},{"size":704,"mtime":1612031059614,"results":"41","hashOfConfig":"32"},{"size":1834,"mtime":1612031059572,"results":"42","hashOfConfig":"32"},{"size":2586,"mtime":1612031059581,"results":"43","hashOfConfig":"32"},{"size":1771,"mtime":1612031059459,"results":"44","hashOfConfig":"32"},{"size":801,"mtime":1611925634672,"results":"45","hashOfConfig":"32"},{"size":1854,"mtime":1611927956691,"results":"46","hashOfConfig":"32"},{"size":524,"mtime":1611925634672,"results":"47","hashOfConfig":"32"},{"size":3615,"mtime":1612031059589,"results":"48","hashOfConfig":"32"},{"size":1701,"mtime":1612031059606,"results":"49","hashOfConfig":"32"},{"size":4096,"mtime":1612031059467,"results":"50","hashOfConfig":"32"},{"size":4683,"mtime":1612033284160,"results":"51","hashOfConfig":"32"},{"size":6020,"mtime":1612033190851,"results":"52","hashOfConfig":"32"},{"size":5202,"mtime":1612031059542,"results":"53","hashOfConfig":"32"},{"size":3946,"mtime":1612031059496,"results":"54","hashOfConfig":"32"},{"size":2303,"mtime":1612031059562,"results":"55","hashOfConfig":"32"},{"size":1835,"mtime":1612031059526,"results":"56","hashOfConfig":"32"},{"size":6520,"mtime":1612033097987,"results":"57","hashOfConfig":"32"},{"size":2388,"mtime":1612031059514,"results":"58","hashOfConfig":"32"},{"size":4250,"mtime":1612031059497,"results":"59","hashOfConfig":"32"},{"size":4177,"mtime":1612031059507,"results":"60","hashOfConfig":"32"},{"size":5038,"mtime":1612031059487,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1bnerng",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\index.js",[],["134","135"],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\reportWebVitals.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\App.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\util\\theme.js",["136"],"export default {\r\n  palette: {\r\n    primary: {\r\n      main: \"#283593\",\r\n      light: \"#33c9dc\",\r\n      dark: \"#008394\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      main: \"#4fc3f7\",\r\n      light: \"#ff6333\",\r\n      dark: \"#b22a00\",\r\n      contrastText: \"#fff\",\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  form: {\r\n    textAlign: \"center\",\r\n  },\r\n  image: {\r\n    margin: \"20px auto 20px auto\",\r\n  },\r\n  pageTitle: {\r\n    margin: \"10px auto 10px auto\",\r\n  },\r\n  textField: {\r\n    margin: \"10px auto 10px auto\",\r\n  },\r\n  button: {\r\n    marginTop: 20,\r\n    position: \"relative\",\r\n  },\r\n  customError: {\r\n    color: \"red\",\r\n    fontSize: \"0.8rem\",\r\n    marginTop: 10,\r\n  },\r\n  progress: {\r\n    position: \"absolute\",\r\n  },\r\n  invisibleSeparator: {\r\n    border: \"none\",\r\n    margin: 4,\r\n  },\r\n  visibleSeparator: {\r\n    width: \"100%\",\r\n    borderBottom: \"1px solid rgba(0,0,0,0.1)\",\r\n    marginBottom: 20,\r\n  },\r\n  paper: {\r\n    padding: 20,\r\n  },\r\n  profile: {\r\n    \"& .image-wrapper\": {\r\n      textAlign: \"center\",\r\n      position: \"relative\",\r\n      \"& button\": {\r\n        position: \"absolute\",\r\n        top: \"80%\",\r\n        left: \"70%\",\r\n      },\r\n    },\r\n    \"& .profile-image\": {\r\n      width: 200,\r\n      height: 200,\r\n      objectFit: \"cover\",\r\n      maxWidth: \"100%\",\r\n      borderRadius: \"50%\",\r\n    },\r\n    \"& .profile-details\": {\r\n      textAlign: \"center\",\r\n      \"& span, svg\": {\r\n        verticalAlign: \"middle\",\r\n      },\r\n      \"& a\": {\r\n        color: \"#00bcd4\",\r\n      },\r\n    },\r\n    \"& hr\": {\r\n      border: \"none\",\r\n      margin: \"0 0 10px 0\",\r\n    },\r\n    \"& svg.button\": {\r\n      \"&:hover\": {\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n  },\r\n  buttons: {\r\n    textAlign: \"center\",\r\n    \"& a\": {\r\n      margin: \"20px 10px\",\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\paginas\\login.js",["137"],"import React, { Component } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n//MUI STUFF\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; //barra de loading\r\n\r\n//REDUX\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../redux/actions/userActions\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst styles = {\r\n  form: {\r\n    textAlign: \"Center\",\r\n  },\r\n  pageTitle: {\r\n    margin: \"10px auto 10px auto\",\r\n  },\r\n  textField: {\r\n    margin: \"10px auto 10px auto\",\r\n  },\r\n  button: {\r\n    marginTop: 20,\r\n    position: \"relative\", //para darmos absolute ao loading para ficar no meio\r\n  },\r\n  customError: {\r\n    color: \"red\", // custom error recusa-se a aparacer TODO EM BAIXO\r\n  },\r\n  loading: {\r\n    position: \"absolute\",\r\n  },\r\n};\r\n\r\n//rce para auto generar isto\r\nexport class login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n  //todo make errors show on screan\r\n  componentWillReceiveProps(nextProps) {\r\n    //resolve os erros não aparecerem\r\n    if (nextProps.UI.error) {\r\n      //estamos sempre a receber props / melhora performance\r\n      this.setState({ errors: nextProps.UI.errors });\r\n    }\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault(); // para nao mostrar a pass na parte de cima e nao dar reload a pagina\r\n    const dataUtilizador = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    this.props.loginUser(dataUtilizador, this.props.history);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value, //serve para o email e password\r\n    });\r\n  };\r\n  //materialui - textfield para documentação do textfield\r\n  render() {\r\n    const {\r\n      classes,\r\n      UI: { loading },\r\n    } = this.props;\r\n    const { errors } = this.state;\r\n    return (\r\n      //segundo item sm para centrar\r\n      //helpertext mostra o aviso para utilizador escrever o email\r\n      //TODO descobrir porque e que nao avisa se a password estiver vazia\r\n      //se tivermos a key error significa que existe erro no email ou password (error = {error.email ? ....})\r\n      <Grid container className={classes.form}>\r\n        <Grid item sm />\r\n        <Grid item sm>\r\n          <Typography variant=\"h2\" className={classes.pageTitle}>\r\n            Login\r\n          </Typography>\r\n          <form noValidate onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              className={classes.textField}\r\n              helperText={errors.email}\r\n              error={errors.email ? true : false}\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n            />\r\n\r\n            <TextField\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              className={classes.textField}\r\n              helperText={errors.password}\r\n              error={errors.password ? true : false}\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n            />\r\n\r\n            {errors.general && (\r\n              <Typography variant=\"body2\" className={classes.customError}>\r\n                {errors.general}\r\n              </Typography>\r\n            )}\r\n            <small>\r\n              <Link to=\"/signup\" color=\"primary\">\r\n                Não tens conta? Inscreve-te aqui!\r\n              </Link>\r\n            </small>\r\n            <br />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={loading}\r\n            >\r\n              Login\r\n              {loading && (\r\n                <CircularProgress size={30} className={classes.loading} />\r\n              )}\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nlogin.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  loginUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n};\r\n\r\n//user e ui veem do state global e sao mapeados para as nossas props para components\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  UI: state.UI,\r\n});\r\n\r\n//ações a usar\r\nconst mapActionsToProps = {\r\n  loginUser,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(login));\r\n","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\paginas\\signup.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\util\\AuthRoute.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\types.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\store.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\paginas\\home.js",["138"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\"; //e para ir buscar a data\r\nimport Grid from \"@material-ui/core/Grid\"; //para design website MUI\r\n\r\n//rce para auto generar isto\r\nimport Scream from \"../components/scream/Scream\";\r\nimport Profile from \"../components/profile/Profile\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getScreams } from \"../redux/actions/dataActions\";\r\n//proxy = https://us-central1-socialsir-e995c.cloudfunctions.net/api  //está no package . json\r\n\r\n//grid item .... é para o padding\r\nexport class home extends Component {\r\n  //comecar screams(posts) como null\r\n  /* state = {\r\n        screams : null\r\n    }\r\n    */\r\n  //buscar os screams\r\n  componentDidMount() {\r\n    this.props.getScreams();\r\n    /* axios.get('/screams')\r\n            .then((res) => {\r\n                    this.setState({\r\n                        screams: res.data\r\n                    })\r\n            })\r\n            .catch(err => console.log(err));*/\r\n  }\r\n\r\n  render() {\r\n    const { screams, loading } = this.props.data;\r\n    let recentScreamsMarkup = !loading ? (\r\n      screams.map((scream) => <Scream key={scream.screamId} scream={scream} />) //se não for null significa que já temos a data\r\n    ) : (\r\n      <p style={{ color: \"red\" }}>Loading....</p>\r\n    ); //se não loading\r\n    return (\r\n      <Grid container spacing={10}>\r\n        <Grid item sm={8} xs={12}>\r\n          {recentScreamsMarkup}\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <Profile />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nhome.propTypes = {\r\n  getScreams: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getScreams })(home);\r\n","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\paginas\\user.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\layout\\NavBar.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\reducers\\uiReducer.js",["139"],"import {\r\n    SET_ERRORS,\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    STOP_LOADING_UI\r\n  } from '../types';\r\n  \r\n  const initialState = {\r\n    loading: false,\r\n    errors: null\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_ERRORS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          errors: action.payload\r\n        };\r\n      case CLEAR_ERRORS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          errors: null\r\n        };\r\n      case LOADING_UI:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n        case STOP_LOADING_UI:\r\n          return {\r\n            ...state,\r\n            loading: false\r\n          };\r\n      default:\r\n        return state;\r\n    }\r\n  }","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\reducers\\dataReducer.js",["140"],"import {\r\n    SET_SCREAMS,\r\n    LIKE_SCREAM,\r\n    UNLIKE_SCREAM,\r\n    LOADING_DATA,\r\n    DELETE_SCREAM,\r\n    POST_SCREAM,\r\n    SET_SCREAM,\r\n    SUBMIT_COMMENT,\r\n    SUBMIT_IMAGE\r\n  } from '../types';\r\n  \r\n  const initialState = {\r\n    screams: [],\r\n    scream: {},\r\n    loading: false\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case LOADING_DATA:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case SET_SCREAMS:\r\n        return {\r\n          ...state,\r\n          screams: action.payload,\r\n          loading: false\r\n        };\r\n      case SET_SCREAM:\r\n        return {\r\n          ...state,\r\n          scream: action.payload\r\n        };\r\n      case SUBMIT_IMAGE:\r\n      case LIKE_SCREAM:\r\n      case UNLIKE_SCREAM:\r\n        let index = state.screams.findIndex(\r\n          (scream) => scream.screamId === action.payload.screamId\r\n        );\r\n        state.screams[index] = action.payload;\r\n        if (state.scream.screamId === action.payload.screamId) {\r\n          state.scream = action.payload;\r\n        }\r\n        return {\r\n          ...state\r\n        };\r\n      case DELETE_SCREAM:\r\n        index = state.screams.findIndex(\r\n          (scream) => scream.screamId === action.payload  //encontrar um scream com o mesmo id com o que enviamos\r\n        );\r\n        state.screams.splice(index, 1); //splice remove o scream \r\n        return {\r\n          ...state\r\n        };\r\n      case POST_SCREAM:\r\n        return {\r\n          ...state,\r\n          screams: [action.payload, ...state.screams]\r\n        };\r\n      case SUBMIT_COMMENT:\r\n        return {\r\n          ...state,\r\n          scream: {\r\n            ...state.scream,\r\n            comments: [action.payload, ...state.scream.comments]\r\n          }\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\util\\MyButton.js",["141"],"import React from \"react\";\r\n\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n//para poder utilizar em varias paginas sem estar a repetir codigo\r\n//children = o q esta dentro // tip e o titulo pro tooltip\r\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\r\n  <Tooltip title={tip} className={tipClassName} placement=\"top\">\r\n    <IconButton onClick={onClick} className={btnClassName}>\r\n      {children}\r\n    </IconButton>\r\n  </Tooltip>\r\n);\r\n","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\actions\\dataActions.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\redux\\reducers\\userReducer.js",["142"],"import {\r\n  SET_USER,\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  LOADING_USER,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  MARK_NOTIFICATIONS_READ,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  loading: false,\r\n  credentials: {},\r\n  likes: [],\r\n  notifications: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      return {\r\n        ...state, //devolve o estado\r\n        authenticated: true, //metemos como autenticado\r\n      };\r\n    case SET_UNAUTHENTICATED:\r\n      return initialState; //estado inicial tem autenticado como false\r\n    case SET_USER:\r\n      return {\r\n        authenticated: true,\r\n        loading: false,\r\n        ...action.payload, //payload e o authenticated loading credential .. etc desta maneira ligamos os likes aos likes as notifications as notifications\r\n      };\r\n    case LOADING_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case LIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: [\r\n          ...state.likes,\r\n          {\r\n            userHandle: state.credentials.handle,\r\n            screamId: action.payload.screamId,\r\n          },\r\n        ],\r\n      };\r\n    case UNLIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: state.likes.filter(\r\n          (like) => like.screamId !== action.payload.screamId //para n alterar os outros apenas o que queremos\r\n        ),\r\n      };\r\n    case MARK_NOTIFICATIONS_READ:\r\n      state.notifications.forEach((not) => (not.read = true)); //mudar o atributo read de false para true\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\layout\\Notifications.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\PostScream.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\profile\\Profile.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\Scream.js",["143","144","145"],"import React, { Component } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport dayjs from \"dayjs\"; // para o tempo ficar bem formatado\r\nimport relativeTime from \"dayjs/plugin/relativeTime\"; // funcao de cima\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport DeleteScream from \"./DeleteScream\";\r\nimport ScreamDialog from \"./ScreamDialog\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport ScreamImage from \"./ScreamImage\";\r\n// MUI Stuff\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n//redux\r\nimport { connect } from \"react-redux\";\r\nimport { likeScream, unlikeScream } from \"../../redux/actions/dataActions\";\r\n\r\n//icons\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nconst styles = {\r\n  card: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    marginBottom: 20,\r\n  },\r\n  image: {\r\n    minWidth: 150,\r\n    maxHeight: 150,\r\n    borderRadius: \"50%\",\r\n  },\r\n  imagepost: {\r\n    minWidth: 200,\r\n    maxWidth: 200,\r\n  },\r\n  conteudo: {\r\n    padding: 25,\r\n    objectFit: \"Cover\", //anti stretch nao funciona as vezes?\r\n  },\r\n  imageButton: {\r\n    center: \"left\",\r\n  },\r\n};\r\n\r\nclass Scream extends Component {\r\n  likedScream = () => {\r\n    if (\r\n      this.props.user.likes &&\r\n      this.props.user.likes.find(\r\n        (like) => like.screamId === this.props.scream.screamId\r\n      )\r\n    )\r\n      //evrifica se ja demos like ao post\r\n      return true;\r\n    else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  likeScream = () => {\r\n    this.props.likeScream(this.props.scream.screamId);\r\n  };\r\n\r\n  unlikeScream = () => {\r\n    this.props.unlikeScream(this.props.scream.screamId);\r\n  };\r\n\r\n  render() {\r\n    dayjs.extend(relativeTime);\r\n    const {\r\n      classes,\r\n      scream: {\r\n        body,\r\n        createdAt,\r\n        userImage,\r\n        userHandle,\r\n        screamId,\r\n        likeCount,\r\n        commentCount,\r\n        imageUrl,\r\n      },\r\n      user: {\r\n        authenticated,\r\n        credentials: { handle },\r\n      },\r\n    } = this.props;\r\n    console.log(imageUrl);\r\n\r\n    const likeButton = !authenticated ? (\r\n      <MyButton tip=\"Like\">\r\n        <Link to=\"/login\">\r\n          <FavoriteBorder color=\"primary\" />\r\n        </Link>\r\n      </MyButton>\r\n    ) : this.likedScream() ? (\r\n      <MyButton tip=\"Unlike\" onClick={this.unlikeScream}>\r\n        <FavoriteIcon color=\"primary\" />\r\n      </MyButton>\r\n    ) : (\r\n      <MyButton tip=\"Like\" onClick={this.likeScream}>\r\n        <FavoriteBorder color=\"primary\" />\r\n      </MyButton>\r\n    );\r\n    //se nao for post do ultizador com login nao tem delete button\r\n    const deleteButton =\r\n      authenticated && userHandle === handle ? (\r\n        <DeleteScream screamId={screamId} />\r\n      ) : null;\r\n\r\n    const imageButton =\r\n      authenticated && userHandle === handle ? (\r\n        <ScreamImage screamId={screamId} />\r\n      ) : null;\r\n\r\n    if (imageUrl != null) {\r\n      const imagemPrint = imageUrl;\r\n    } else {\r\n      const imagemPrint = null;\r\n    }\r\n\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          image={userImage}\r\n          title=\"Profile image\"\r\n          className={classes.image}\r\n        />\r\n\r\n        <CardContent className={classes.content}>\r\n          <Typography\r\n            variant=\"h5\"\r\n            component={Link}\r\n            to={`/users/${userHandle}`}\r\n            color=\"primary\"\r\n          >\r\n            {userHandle}\r\n          </Typography>\r\n          {deleteButton}\r\n          {imageButton}\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {dayjs(createdAt).fromNow()}\r\n          </Typography>\r\n          <Typography variant=\"body1\">{body}</Typography>\r\n          <LikeButton screamId={screamId} />\r\n          <span>{likeCount} Likes</span>\r\n          <MyButton tip=\"comments\">\r\n            <ChatIcon color=\"primary\" />\r\n          </MyButton>\r\n          <span>{commentCount} comments</span>\r\n\r\n          <ScreamDialog\r\n            screamId={screamId}\r\n            userHandle={userHandle}\r\n            openDialog={this.props.openDialog} // para abrirmos o scream na pagina do user se não tivermos passa um valor nao defenido e não faz nada\r\n          />\r\n        </CardContent>\r\n\r\n        <CardMedia\r\n          image={imageUrl}\r\n          title=\"Profile image\"\r\n          className={classes.imagepost}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nScream.propTypes = {\r\n  likeScream: PropTypes.func.isRequired,\r\n  unlikeScream: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  scream: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openDialog: PropTypes.bool,\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  likeScream,\r\n  unlikeScream,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(Scream));\r\n","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\profile\\ProfileEstatico.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\ScreamImage.js",["146","147","148","149"],"import React, { Component, Fragment } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// MUI stuff\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\n\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport { uploadImage } from \"../../redux/actions/dataActions\";\r\n\r\nconst styles = (theme) => ({\r\n  imageInput: {\r\n    position: \"absolute\",\r\n    left: \"90%\",\r\n    top: \"50%\",\r\n  },\r\n});\r\n\r\nexport class ScreamImage extends Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleImageChange = (event) => {\r\n    const image = event.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image, image.name);\r\n    this.props.uploadImage(this.props.screamId, formData);\r\n    this.handleClose(); // DONE - fix infinite loading\r\n  };\r\n  handleEditImage = () => {\r\n    const input = document.getElementById(\"imageInput\");\r\n    input.click();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <input\r\n          type=\"file\"\r\n          id=\"imageInput\"\r\n          onChange={this.handleImageChange}\r\n          hidden=\"hidden\"\r\n          onClick={this.handleOpen}\r\n        />\r\n        <Tooltip title=\"Editar imagem do post\" placement=\"top\">\r\n          <IconButton onClick={this.handleEditImage} className=\"imageButton\">\r\n            <ImageIcon color=\"primary\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapActionsToProps = { uploadImage };\r\n\r\nScreamImage.propTypes = {\r\n  uploadImage: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  screamId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(ScreamImage));\r\n","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\LikeButton.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\ScreamDialog.js",["150"],"import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport Comments from \"./Comments\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport dayjs from \"dayjs\";\r\nimport { Link } from \"react-router-dom\";\r\n// MUI Stuff\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// Icons\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\n// Redux stuff\r\nimport { connect } from \"react-redux\";\r\nimport { getScream, clearErrors } from \"../../redux/actions/dataActions\";\r\n\r\nconst styles = (theme) => ({\r\n  palette: {\r\n    primary: {\r\n      main: \"#283593\",\r\n      light: \"#33c9dc\",\r\n      dark: \"#008394\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      main: \"#4fc3f7\",\r\n      light: \"#ff6333\",\r\n      dark: \"#b22a00\",\r\n      contrastText: \"#fff\",\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  form: {\r\n    textAlign: \"Center\",\r\n  },\r\n  pageTitle: {\r\n    margin: \"10px auto 10px auto\",\r\n  },\r\n  textField: {\r\n    margin: \"10px auto 10px auto\",\r\n  },\r\n  button: {\r\n    marginTop: 20,\r\n    position: \"relative\", //para darmos absolute ao loading para ficar no meio\r\n  },\r\n  customError: {\r\n    color: \"red\", // custom error recusa-se a aparacer TODO EM BAIXO\r\n  },\r\n  loading: {\r\n    position: \"absolute\",\r\n  },\r\n  profileImage: {\r\n    maxWidth: 200,\r\n    height: 200,\r\n    borderRadius: \"50%\",\r\n    objectFit: \"cover\",\r\n  },\r\n  Image: {\r\n    maxWidth: 500,\r\n    maxHeight: 500,\r\n  },\r\n  dialogContent: {\r\n    padding: 20,\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    left: \"90%\",\r\n  },\r\n  expandButton: {\r\n    position: \"absolute\",\r\n    left: \"90%\",\r\n  },\r\n  spinnerDiv: {\r\n    textAlign: \"center\",\r\n    marginTop: 50,\r\n    marginBottom: 50,\r\n  },\r\n  invisibleSeparator: {\r\n    border: \"none\",\r\n    margin: 4,\r\n  },\r\n  visibleSeparator: {\r\n    width: \"100%\",\r\n    borderBottom: \"1px solid rgba(0,0,0,0.1)\",\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nclass ScreamDialog extends Component {\r\n  state = {\r\n    open: false,\r\n    oldPath: \"\",\r\n    newPath: \"\", //caminhos do url\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.openDialog) {\r\n      //se tivermos o open dialog\r\n      this.handleOpen(); //abrimos\r\n    }\r\n  }\r\n  handleOpen = () => {\r\n    let oldPath = window.location.pathname; //localizaçao atual\r\n\r\n    const { userHandle, screamId } = this.props;\r\n    const newPath = `/users/${userHandle}/scream/${screamId}`; //para quando abrirmos screams diretamente irmos a pagina do utilizador que o postou\r\n\r\n    if (oldPath === newPath) oldPath = `/users/${userHandle}`; //se formos diretamente ao link ao postar-lo nao temos old path por isso temois que criar old path\r\n    //sem data , sem data, url\r\n    window.history.pushState(null, null, newPath);\r\n\r\n    this.setState({ open: true, oldPath, newPath });\r\n    this.props.getScream(this.props.screamId);\r\n  };\r\n  handleClose = () => {\r\n    window.history.pushState(null, null, this.state.oldPath); // quando fecharmos volta ao path anterior\r\n    this.setState({ open: false });\r\n    this.props.clearErrors();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      scream: {\r\n        screamId,\r\n        body,\r\n        createdAt,\r\n        likeCount,\r\n        commentCount,\r\n        userImage,\r\n        userHandle,\r\n        comments,\r\n        imageUrl,\r\n      },\r\n      UI: { loading },\r\n    } = this.props;\r\n\r\n    const dialogMarkup = loading ? (\r\n      <div className={classes.spinnerDiv}>\r\n        <CircularProgress size={200} thickness={2} />\r\n      </div>\r\n    ) : (\r\n      <Grid container spacing={16}>\r\n        <Grid item sm={5}>\r\n          <img src={userImage} alt=\"Profile\" className={classes.profileImage} />\r\n        </Grid>\r\n        <Grid item sm={7}>\r\n          <Typography\r\n            component={Link}\r\n            color=\"primary\"\r\n            variant=\"h5\"\r\n            to={`/users/${userHandle}`}\r\n          >\r\n            @{userHandle}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body1\">{body}</Typography>\r\n          <LikeButton screamId={screamId} />\r\n          <span>{likeCount} likes</span>\r\n          <MyButton tip=\"comments\">\r\n            <ChatIcon color=\"primary\" />\r\n          </MyButton>\r\n          <span>{commentCount} comments</span>\r\n        </Grid>\r\n\r\n        <Grid>\r\n          <img src={imageUrl} className={classes.Image} />\r\n        </Grid>\r\n        <hr className={classes.visibleSeperator} />\r\n        <CommentForm screamId={screamId} />\r\n        <Comments comments={comments} />\r\n      </Grid>\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          onClick={this.handleOpen}\r\n          tip=\"Expand scream\"\r\n          tipClassName={classes.expandButton}\r\n        >\r\n          <UnfoldMore color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <MyButton\r\n            tip=\"Close\"\r\n            onClick={this.handleClose}\r\n            tipClassName={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n          </MyButton>\r\n          <DialogContent className={classes.dialogContent}>\r\n            {dialogMarkup}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n  clearErrors: PropTypes.func.isRequired,\r\n  getScream: PropTypes.func.isRequired,\r\n  screamId: PropTypes.string.isRequired,\r\n  userHandle: PropTypes.string.isRequired,\r\n  scream: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  scream: state.data.scream,\r\n  UI: state.UI,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  getScream,\r\n  clearErrors,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(ScreamDialog));\r\n","C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\DeleteScream.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\CommentForm.js",[],["151","152"],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\scream\\Comments.js",[],"C:\\Users\\hugol\\Desktop\\socialsir-client\\src\\components\\profile\\EditDetails.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":1,"column":1,"nodeType":"159","endLine":97,"endColumn":3},{"ruleId":"160","severity":1,"message":"161","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":13},{"ruleId":"157","severity":1,"message":"164","line":13,"column":3,"nodeType":"159","endLine":40,"endColumn":4},{"ruleId":"157","severity":1,"message":"164","line":19,"column":3,"nodeType":"159","endLine":74,"endColumn":4},{"ruleId":"157","severity":1,"message":"165","line":7,"column":1,"nodeType":"159","endLine":13,"endColumn":3},{"ruleId":"157","severity":1,"message":"164","line":19,"column":1,"nodeType":"159","endLine":66,"endColumn":2},{"ruleId":"160","severity":1,"message":"166","line":94,"column":11,"nodeType":"162","messageId":"163","endLine":94,"endColumn":21},{"ruleId":"160","severity":1,"message":"167","line":121,"column":13,"nodeType":"162","messageId":"163","endLine":121,"endColumn":24},{"ruleId":"160","severity":1,"message":"167","line":123,"column":13,"nodeType":"162","messageId":"163","endLine":123,"endColumn":24},{"ruleId":"160","severity":1,"message":"168","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":14},{"ruleId":"160","severity":1,"message":"169","line":7,"column":8,"nodeType":"162","messageId":"163","endLine":7,"endColumn":18},{"ruleId":"160","severity":1,"message":"170","line":8,"column":8,"nodeType":"162","messageId":"163","endLine":8,"endColumn":15},{"ruleId":"160","severity":1,"message":"171","line":9,"column":8,"nodeType":"162","messageId":"163","endLine":9,"endColumn":13},{"ruleId":"172","severity":1,"message":"173","line":179,"column":11,"nodeType":"174","endLine":179,"endColumn":59},{"ruleId":"153","replacedBy":"175"},{"ruleId":"155","replacedBy":"176"},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","Unexpected default export of anonymous function","Assign arrow function to a variable before exporting as module default","'likeButton' is assigned a value but never used.","'imagemPrint' is assigned a value but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'MuiLink' is defined but never used.","'Paper' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["177"],["178"],"no-global-assign","no-unsafe-negation"]